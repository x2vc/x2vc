/*-
 * #%L
 * x2vc - XSLT XSS Vulnerability Checker
 * %%
 * Copyright (C) 2023 x2vc authors and contributors
 * %%
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 * #L%
 */
package org.x2vc.report;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import nl.jqno.equalsverifier.EqualsVerifier;

@ExtendWith(MockitoExtension.class)
class VulnerabilityReportIssueTest {

	/**
	 * Test method for {@link org.x2vc.report.VulnerabilityReportIssue#builder()} and the associated builder class.
	 */
	@Test
	void testBuilder() {
		final IVulnerabilityReportIssue issue = VulnerabilityReportIssue.builder()
			.withAffectedOutputElement("output")
			.addAffectingInputElement("input1")
			.addAffectingInputElement("input2")
			.addAffectingInputElements(List.of("input3", "input4"))
			.addExample(new VulnerabilityReportExample("is1", "os1"))
			.addExample("is2", "os2")
			.build();
		assertEquals("output", issue.getAffectedOutputElement());
		assertEquals(4, issue.getAffectingInputElements().size());
		assertTrue(issue.getAffectingInputElements().contains("input1"));
		assertTrue(issue.getAffectingInputElements().contains("input2"));
		assertTrue(issue.getAffectingInputElements().contains("input3"));
		assertTrue(issue.getAffectingInputElements().contains("input4"));
		assertEquals(2, issue.getExamples().size());
		assertEquals("is1", issue.getExamples().get(0).getInputSample());
		assertEquals("os1", issue.getExamples().get(0).getOutputSample());
		assertEquals("is2", issue.getExamples().get(1).getInputSample());
		assertEquals("os2", issue.getExamples().get(1).getOutputSample());

		final var str = issue.toString();
		assertEquals(
				"VulnerabilityReportIssue [affectedOutputElement=output, affectingInputElements=(input4, input3, input2, input1), examples=[VulnerabilityReportExample [inputSample=is1, outputSample=os1], VulnerabilityReportExample [inputSample=is2, outputSample=os2]]]",
				str);
	}

	/**
	 * Test method for {@link org.x2vc.report.VulnerabilityReportIssue#equals(java.lang.Object)}.
	 */
	@Test
	void testEqualsObject() {
		EqualsVerifier.forClass(VulnerabilityReportIssue.class).verify();
	}

}
