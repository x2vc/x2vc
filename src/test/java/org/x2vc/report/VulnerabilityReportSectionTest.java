/*-
 * #%L
 * x2vc - XSLT XSS Vulnerability Checker
 * %%
 * Copyright (C) 2023 x2vc authors and contributors
 * %%
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 * #L%
 */
package org.x2vc.report;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertSame;
import static org.mockito.Mockito.mock;

import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import nl.jqno.equalsverifier.EqualsVerifier;

@ExtendWith(MockitoExtension.class)
class VulnerabilityReportSectionTest {

	/**
	 * Test method for {@link org.x2vc.report.VulnerabilityReportSection#builder()} and the associated builder class.
	 */
	@Test
	void testBuilder() {
		final IVulnerabilityReportIssue issue1 = mock();
		final IVulnerabilityReportIssue issue2 = mock();
		final IVulnerabilityReportIssue issue3 = mock();
		final IVulnerabilityReportIssue issue4 = mock();
		final IVulnerabilityReportSection section = VulnerabilityReportSection.builder()
			.withRuleID("ruleID")
			.withHeading("head")
			.withShortHeading("shortHeading")
			.withIntroduction("intro")
			.withDescription("desc")
			.withCountermeasures("cm")
			.addIssue(issue1)
			.addIssue(issue2)
			.addIssues(List.of(issue3, issue4))
			.build();
		assertEquals("ruleID", section.getRuleID());
		assertEquals("head", section.getHeading());
		assertEquals("shortHeading", section.getShortHeading());
		assertEquals("intro", section.getIntroduction());
		assertEquals("desc", section.getDescription());
		assertEquals("cm", section.getCountermeasures());
		assertEquals(4, section.getIssues().size());
		// order must be kept
		assertSame(issue1, section.getIssues().get(0));
		assertSame(issue2, section.getIssues().get(1));
		assertSame(issue3, section.getIssues().get(2));
		assertSame(issue4, section.getIssues().get(3));

		final var str = section.toString();
		assertEquals("VulnerabilityReportSection [ruleID=ruleID, heading=head]", str);
	}

	/**
	 * Test method for {@link org.x2vc.report.VulnerabilityReportSection#equals(java.lang.Object)}.
	 */
	@Test
	void testEqualsObject() {
		EqualsVerifier.forClass(VulnerabilityReportSection.class).verify();
	}

}
